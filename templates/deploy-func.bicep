targetScope = 'subscription'

// Hlavní parametry pro nasazení 
param location string
param locationShort string
param environment string
param sequence string
param workloadTags object
param appNameShort string

// Specifické parametry pro nasazení
param use32BitWorkerProcess bool                                                                  // Určuje, zda má Function App běžet v 32bitovém režimu.
param ftpsState string                                                                            // Nastavuje stav FTPS pro Function App. 

param linuxFxVersion string                                                                       // Specifikuje verzi runtime prostředí pro Function App.
param sku string                                                                                  // Určuje SKU pro Function App. Například 'Dynamic' pro serverless.
param skuCode string                                                                              // Určuje kód SKU pro Function App. Například 'Y1' pro serverless.
param workerSize string                                                                           // Určuje kapacitu workeru pro Function App. Například 'Small'.
param workerSizeId string                                                                         // Určuje ID workeru pro Function App. Například '0' pro Small.
param numberOfWorkers string                                                                      // Určuje počet workerů pro Function App. Například '1'.
param ipSecurityRestrictions array                                                                // ACL na funkci
param scmIpSecurityRestrictions array                                                             // ACL na SCM
//param autoGeneratedDomainNameLabelScope string                                                  // Určuje rozsah pro automaticky generované doménové jméno.
//param alwaysOn bool                                                                             // Určuje, zda má být Function App vždy zapnutá.    

// Generování názvů
var funcName = 'func-vzp-${appNameShort}-${environment}-${locationShort}'                         // application has name, there is no sequence
var storageAccountName = 'savzp${appNameShort}${environment}${locationShort}'                     // default is single storage account for single app, no sequence
var hostingPlanName = 'plan-vzp-${appNameShort}-${environment}-${locationShort}'                  // each app has its own plan, no sequence
var appInsightsName = 'ai-vzp-${appNameShort}-${environment}-${locationShort}'                    // single ai for single app, no sequence
var logAnalyticsWorkspaceName = 'la-vzp-${appNameShort}-${environment}-${locationShort}'          // single log analytics for single app, no sequence
var contentShare = funcName

// Sestavení univerzálního tagu
var globalTags = union({
  environment: environment
  location: location
  servicetype: 'Azure Function App'
  sequence: sequence
}, workloadTags)

// Resource group pro Function App
resource resourceGroupFnApp 'Microsoft.Resources/resourceGroups@2021-04-01' = {
  name: 'rg-vzp-common-${appNameShort}-${environment}-${locationShort}'
  location: location
  tags: globalTags
}

// Vytvoření Log Analytics workspace v resource group Function App
module logAnalyticsWorkspace '../modules/v1.0/log-analytics.bicep' = {
  name: 'logAnalyticsWorkspace-${environment}-${appNameShort}-${locationShort}'
  scope: resourceGroupFnApp
  params: {
    location: location
    tags: globalTags
    workspaceName: logAnalyticsWorkspaceName
  }
}

// Storage account pro Function App
module storageAccount '../modules/v1.0/storage-account.bicep' = {
  name: 'storageAccount-${environment}-${appNameShort}-${locationShort}'
  scope: resourceGroupFnApp
  params: {
    storageAccountName: storageAccountName
    tags: globalTags
  }
}

// Application Insights pro Function App
module appInsights '../modules/v1.0/app-insights.bicep' = {
  name: 'appInsights-${environment}-${appNameShort}-${locationShort}'
  scope: resourceGroupFnApp
  params: {
    name: appInsightsName
    workspaceId: logAnalyticsWorkspace.outputs.workspaceId
    tags: globalTags
  }
}

// App Service Plan pro Function App
module appServicePlan '../modules/v1.0/app-serviceplan.bicep' = {
  name: 'appServicePlan-${environment}-${appNameShort}-${locationShort}'
  scope: resourceGroupFnApp
  params: {
    hostingPlanName: hostingPlanName
    sku: sku
    skuCode: skuCode
    workerSize: workerSize
    workerSizeId: workerSizeId
    numberOfWorkers: numberOfWorkers
    tags: globalTags
  }
}

// Function App
module functionApp '../modules/v1.0/function-app.bicep' = {
  name: 'functionApp-${environment}-${appNameShort}-${locationShort}'
  scope: resourceGroupFnApp
  params: {
    name: funcName
    storageAccountName: storageAccountName
    use32BitWorkerProcess: use32BitWorkerProcess
    ftpsState: ftpsState
    linuxFxVersion: linuxFxVersion
    contentShare: contentShare
    serverFarmId: appServicePlan.outputs.id
    appInsightsConnectionString: appInsights.outputs.connectionString
    tags: globalTags
    ipSecurityRestrictions: ipSecurityRestrictions
    scmIpSecurityRestrictions: scmIpSecurityRestrictions
  }
  dependsOn: [
    storageAccount
  ]
}
